"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("tns-core-modules/color");
var utils_1 = require("tns-core-modules/utils/utils");
var toast_common_1 = require("./toast.common");
__export(require("./toast.common"));
var Toasty = (function () {
    function Toasty(text, duration, position, textColor, backgroundColor) {
        this._text = text;
        this._toast = android.widget.Toast.makeText(utils_1.ad.getApplicationContext(), text, android.widget.Toast.LENGTH_SHORT);
        this.setToastDuration(duration);
        this.setToastPosition(position);
        this.setTextColor(textColor);
        this.setBackgroundColor(backgroundColor);
        return this;
    }
    Object.defineProperty(Toasty.prototype, "position", {
        get: function () {
            return this._position;
        },
        set: function (value) {
            if (value) {
                this._position = value;
                this.setToastPosition(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Toasty.prototype, "duration", {
        get: function () {
            return this._duration;
        },
        set: function (value) {
            if (value) {
                this._duration = value;
                this.setToastDuration(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Toasty.prototype, "textColor", {
        get: function () {
            return this._textColor;
        },
        set: function (value) {
            if (value) {
                this._textColor = value;
                this.setTextColor(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Toasty.prototype, "backgroundColor", {
        get: function () {
            return this._backgroundColor;
        },
        set: function (value) {
            if (value) {
                this._backgroundColor = value;
                this.setBackgroundColor(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Toasty.prototype.show = function () {
        if (!this._text) {
            throw new Error('Toasty Text is not set.');
        }
        else {
            this._toast.show();
        }
    };
    Toasty.prototype.cancel = function () {
        if (this._toast) {
            this._toast.cancel();
        }
    };
    Toasty.prototype.setTextColor = function (value) {
        if (value) {
            this._textColor = value;
            var view = this._toast.getView();
            var text = view.findViewById(android.R.id.message);
            if (typeof value === 'string') {
                var nativeColor = new color_1.Color(value).android;
                text.setTextColor(nativeColor);
            }
            else {
                text.setTextColor(value.android);
            }
            text.setShadowLayer(0, 0, 0, 0);
        }
        return this;
    };
    Toasty.prototype.setBackgroundColor = function (value) {
        if (value) {
            this._backgroundColor = value;
            var view = this._toast.getView();
            if (typeof value === 'string') {
                var nativeColor = new color_1.Color(value).android;
                view.setBackgroundColor(nativeColor);
            }
            else {
                view.setBackgroundColor(value.android);
            }
        }
        return this;
    };
    Toasty.prototype.setToastDuration = function (value) {
        switch (value) {
            case toast_common_1.ToastDuration.SHORT:
                this._toast.setDuration(android.widget.Toast.LENGTH_SHORT);
                break;
            case toast_common_1.ToastDuration.LONG:
                this._toast.setDuration(android.widget.Toast.LENGTH_LONG);
                break;
            default:
                this._toast.setDuration(android.widget.Toast.LENGTH_SHORT);
                break;
        }
        return this;
    };
    Toasty.prototype.setToastPosition = function (value) {
        switch (value) {
            case toast_common_1.ToastPosition.TOP:
                this._toast.setGravity(android.view.Gravity.TOP, 0, 0);
                break;
            case toast_common_1.ToastPosition.CENTER:
                this._toast.setGravity(android.view.Gravity.CENTER, 0, 0);
                break;
            case toast_common_1.ToastPosition.BOTTOM:
                this._toast.setGravity(android.view.Gravity.BOTTOM, 0, 0);
                break;
            case toast_common_1.ToastPosition.NO_SETTING:
                break;
            default:
                this._toast.setGravity(android.view.Gravity.BOTTOM, 0, 0);
                break;
        }
        return this;
    };
    return Toasty;
}());
exports.Toasty = Toasty;
//# sourceMappingURL=toasty.android.js.map